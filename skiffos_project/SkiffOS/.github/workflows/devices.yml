name: Devices

on:
  push:
    branches: [master, next, stable]

# Builds images for target boards.
jobs:
  device:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    timeout-minutes: 2880
    strategy:
      matrix:
        skiffconf:
        - apple-macbook
        - odroid-c4
        - odroid-xu
        - pi-0
        - pi-3
        - pi-4
        - pine64-book
        - pine64-phone
        - pine64-h64
        - jetson-tx2
        # temporarily disabled targets:
        # - jetson-nano
        # - odroid-u
        # - virt-wsl
    steps:
      - uses: actions/checkout@v2
      - name: Update the submodule
        run: |
          cd $GITHUB_WORKSPACE
          git submodule update --init --recursive
      - name: Clear caches if necessary
        run: |
          # necessary to save space
          echo "Cache dir: $(realpath ~/br-cache)"
          if [ ! -f ~/br-cache/ccache-v8 ]; then
            echo "Clearing old compiler cache..."
            rm -rf ~/br-cache/ccache* || true
            mkdir -p ~/br-cache/ccache
            touch ~/br-cache/ccache-v8
          fi
          if [ ! -f ~/br-cache/dl-v7 ]; then
            echo "Clearing old downloads cache..."
            rm -rf ~/br-cache/dl* || true
            mkdir -p ~/br-cache/dl
            touch ~/br-cache/dl-v7
          fi
      - name: Print help and packages list
        run: |
          cd $GITHUB_WORKSPACE
          make help
      - name: Build the system image
        env:
          SKIFF_DEVICE_CONFIG: ${{ matrix.skiffconf }}
        run: |
          cd $GITHUB_WORKSPACE
          export TERM=xterm
          export PATH=/usr/sbin:/usr/bin:/sbin:/bin
          export BR2_CCACHE_DIR=${HOME}/br-cache/ccache
          export BR2_DL_DIR=${HOME}/br-cache/dl
          echo "Cache dir: ${HOME}/br-cache"
          SKIFF_TARGET=$(echo ${SKIFF_DEVICE_CONFIG} | sed "s#-#/#g")
          export SKIFF_CONFIG=${SKIFF_TARGET},skiff/core,core/gentoo
          export SKIFF_WORKSPACE=${SKIFF_DEVICE_CONFIG}
          rm -rf ./workspaces/${SKIFF_WORKSPACE} || true
          make -s configure
          cd ./workspaces/${SKIFF_WORKSPACE}
          make -s host-python
          cd ../../
          make -s compile
          make -s check
          rm -rf ./workspaces/${SKIFF_WORKSPACE}/{build,extra_images,host,target,staging}
          mkdir -p workflow-artifacts
          tar -cvf ./workflow-artifacts/images.tar.gz --exclude="rootfs.cpio" -C ./workspaces/$SKIFF_WORKSPACE/images/ ./
      - uses: actions/upload-artifact@v2
        with:	
          name: images-${{ matrix.skiffconf }}.tar.gz
          path: ${{ github.workspace }}/workflow-artifacts/images.tar.gz


